# Settings file for LiU EEE, An Educational EHR Environment based on openEHR

# ### General settings ###

# TCP/IP Port number for main EEE http server 
# (usually port 80 is used for web servers)
defaultPortNumber=8182

# Path to the directory containing files (e.g. index.html) 
# that will serve (possibly changing) files at the http server's root
wwwFileDir=src/main/resources/www-file-root

# Path to the directory containing static (unchanging) files
# that will be served under the /static URI-prefix
wwwStaticFileDir=src/main/resources/www-static

# Identifier of this particular installed EHR system. 
# It should be unique in order to facilitate versioning in
# a distributed EHR. It is used as part of the identifier
# for all EHR entries created using this system instance.
systemID=pleaseChangeThis.eee.mi.imt.liu.se

# Path to the directory containing Freemarker (.ftl) template files 
freemarkerTemplateFileDir=src/main/resources/www-file-root/freemarker-templates



# ### Logger settings ###

# appLogFile: Pattern indicating where the application log files should be written 
# A pattern consists of a string that includes the following special components that will be replaced at runtime:
#    "/" the local pathname separator
#    "%t" the system temporary directory
#    "%h" the value of the "user.home" system property
#    "%g" the generation number to distinguish rotated logs
#    "%u" a unique number to resolve conflicts
#    "%%" translates to a single percent sign "%" 
appLogFile=log/app-log-%u-%g.xml
# appLogLevel: The log detail level desired, see http://docs.oracle.com/javase/6/docs/api/java/util/logging/Level.html 
appLogLevel=WARNING

# Pattern indicating where the access log files should be written 
accessLogFile=log/access-%u-%g.log
# The access log is (probably) apache formatted and can be analyzed using standard tools such as the ones listed on 
# http://www.dmoz.org/Computers/Software/Internet/Site_Management/Log_Analysis/
# and http://en.wikipedia.org/wiki/List_of_web_analytics_software


# ### Database settings ###

database=eXist
databaseHost=localhost:8080
databaseName=db/EEE
databaseUser=eee
databasePass=secret

#database=Sedna
#databaseHost=localhost
#databaseName=EEE_EHR
#databaseUser=SYSTEM
#databasePass=MANAGER



# ### Archetype and Template Repository settings ### 
# These repositories are used e.g. by 
#  - the instance builder utility resource
#  - Validators and Converters
#
# Path to the root directory containing template (.OET) files 
oetTemplateFileDir=src/main/resources/www-file-root/aom/templates
# Path to the toot directory containing archetype files 
archetypeFileDir=src/main/resources/www-file-root/aom/archetypes



# ### Trigger handling settings ###

# Optional minimal built-in server running on the EEE host. 
# External servers like HornetQ, ActiveMQ or can be used instead
# see http://stomp.github.com/implementations.html
triggerServer_EnableBuiltin=true
triggerServer_port=61626

# Send trigger messages when Contributions are committed.
# This requires that either an external or the above declared server is active.
ContributionTrigger_active=true

# If ContributionTrigger_active is true then select how to configure and connect to trigger handler:

# The internally used channel or queue name
ContributionTrigger_destination=/queue/foo 

# The maximum time the ContributionTrigger will wait for receipt from the trigger handler 
# If receipt is not received within the timeout the Contribution commit will fail and be rolled back
# and the caller will get a "HTTP Error 503 - Service unavailable"
ContributionTrigger_timeOutInMilliseconds=1000 

# Set to true if you want to use in-process communication instead of network   
ContributionTrigger_EnableInProccesCommunication=true

# Settings for STOMP over network.
# if EnableInProccesCommunication is true then the four ContributionTrigger settings below will be ignored
ContributionTrigger_server=localhost
ContributionTrigger_serverPort=61626
ContributionTrigger_login=eee
ContributionTrigger_passcode=very_secret

## Later configuring contribution triggers via dynamic classloading might get implemented, then something like the following would be needed  
#ContributionTrigger_className=org.example.myFantasticContributionTrigger
#ContributionTrigger_configurationJsonString={"foo":"bar"}
## For now you'll need to change in the startup class of the application instead to use custom trigger classes...

# The enableDebugTriggerListener enables a simple debug listener that prints received STOMP messages to screen
enableDebugTriggerListener=true



# ### Cache settings ###
# numbers represent seconds
# // 60*60*24*100=8640000 100 Days // 60*60*24*7=604800 A week // 60*60*24=86400 A day // 60*60=3600 An hour

### Development setting
#staticDirectroyMaxage=86400
#defaultDirectoryMaxage=0
#identifiedVersionsMaxage=60
#useETagForIndividualData=true

### No caching, just ETag on files, not EHR data (bad performance) - Cache validation, Testcase -1 ###
#staticDirectroyMaxage=0
#defaultDirectoryMaxage=0
#identifiedVersionsMaxage=0 
#useETagForIndividualData=false

### Cache validation, Testcase 0 ###
#staticDirectroyMaxage=604800
#defaultDirectoryMaxage=604800
#identifiedVersionsMaxage=0 
#useETagForIndividualData=false

### Cache validation, Testcase M ###
#staticDirectroyMaxage=604800
#defaultDirectoryMaxage=604800
#identifiedVersionsMaxage=604800 
#useETagForIndividualData=false

### Cache validation, Testcase E ###
#staticDirectroyMaxage=604800
#defaultDirectoryMaxage=604800
#identifiedVersionsMaxage=0 
#useETagForIndividualData=true

### Public server mode - Cache validation, Testcase M+E ###
staticDirectroyMaxage=8640000
defaultDirectoryMaxage=604800
identifiedVersionsMaxage=86400 
useETagForIndividualData=true


# ### User account settings ###

# Users with read-only access are represented using the format user.r.username=password
user.r.demo=demo
user.r.demo1=demo1
user.r.demo2=demo2

# Users with both read and write access are represented using the format user.rw.username=password
user.rw.superdemo=superduper



